apiVersion: v1
kind: ConfigMap
metadata:
  name: mastodon-config
data:
  # Service dependencies
  REDIS_HOST: mstdn-redis
  REDIS_PORT: "6379"
  DB_HOST: mstdn-cloudsql
  # DB_USER: postgres
  DB_NAME: mastodon
  # DB_PASS:
  DB_PORT: "5432"

  # Federation
  # LOCAL_DOMAIN:
  LOCAL_HTTPS: "true"

  # Application secrets
  # Generate each with the `rake secret` task (`docker-compose run --rm web rake secret` if you use docker compose)
  # PAPERCLIP_SECRET:
  # SECRET_KEY_BASE:
  # OTP_SECRET:

  # Registrations
  # Single user mode will disable registrations and redirect frontpage to the first profile
  # SINGLE_USER_MODE: "true"
  # Prevent registrations with following e-mail domains
  # EMAIL_DOMAIN_BLACKLIST: "example1.com|example2.de|etc"
  # Only allow registrations with the following e-mail domains
  # EMAIL_DOMAIN_WHITELIST: "example1.com|example2.de|etc"

  # Optionally change default language
  # DEFAULT_LOCALE: de

  # E-mail configuration
  # Note: Mailgun and SparkPost (https://sparkpo.st/smtp) each have good free tiers
  # SMTP_SERVER:
  # SMTP_PORT: "2525"
  # SMTP_LOGIN:
  # SMTP_PASSWORD:
  # SMTP_FROM_ADDRESS:

  # Optional asset host for multi-server setups
  # CDN_HOST: assets.example.com

  # S3 (optional)
  # S3_ENABLED: "true"
  # S3_BUCKET:
  # AWS_ACCESS_KEY_ID:
  # AWS_SECRET_ACCESS_KEY:
  # S3_REGION:
  # S3_PROTOCOL: http
  # S3_HOSTNAME: 192.168.1.123:9000

  # S3 (Minio Config (optional) Please check Minio instance for details)
  S3_ENABLED: "true"
  S3_BUCKET: mastodon-prod
  # AWS_ACCESS_KEY_ID:
  # AWS_SECRET_ACCESS_KEY:
  S3_REGION: asia
  S3_PROTOCOL: https
  S3_HOSTNAME: storage.googleapis.com
  S3_ENDPOINT: https://storage.googleapis.com
  # http://zattonaka.blogspot.com/2018/06/s3-aws-cli-provided-security.html
  S3_SIGNATURE_VERSION: s3

  # Optional alias for S3 if you want to use Cloudfront or Cloudflare in front
  # S3_CLOUDFRONT_HOST:

  # Streaming API integration
  # STREAMING_API_BASE_URL:

  # Advanced settings
  # If you need to use pgBouncer, you need to disable prepared statements:
  # PREPARED_STATEMENTS: "false"
