apiVersion: v1
kind: ConfigMap
metadata:
  name: mstdn-nginx-conf
data:
  default.conf.template: |
    map $http_upgrade $connection_upgrade {
      default upgrade;
      ''      close;
    }

    server {
      listen 80;
      listen [::]:80;
      server_name ${LOCAL_DOMAIN};

      location /healthz {
        return 200 "healthy\n";
      }

      if ( $http_user_agent ~* googlehc ) {
        return 200 "healthy\n";
      }

      keepalive_timeout    70;
      sendfile             on;
      client_max_body_size 0;

      gzip on;
      gzip_disable "msie6";
      gzip_vary on;
      gzip_proxied any;
      gzip_comp_level 6;
      gzip_buffers 16 8k;
      gzip_http_version 1.1;
      gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

      add_header Strict-Transport-Security "max-age=31536000" always;
      add_header Content-Security-Policy "default-src 'none'; script-src 'self'; style-src 'self' 'unsafe-inline'; connect-src 'self' wss://${LOCAL_DOMAIN} data: blob:; img-src 'self' https://${LOCAL_DOMAIN} https://storage.googleapis.com data: blob:; media-src 'self' https://storage.googleapis.com; font-src 'self'";
      add_header Referrer-Policy "same-origin";

      location / {
        try_files $uri @proxy;
      }

      location @proxy {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Proxy "";
        proxy_pass_header Server;

        proxy_pass http://mastodon:3000;
        proxy_buffering off;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        tcp_nodelay on;
      }

      location /api/v1/streaming {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Proxy "";

        proxy_pass http://mastodon:4000;
        proxy_buffering off;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        tcp_nodelay on;
      }
    }

---

kind: Service
apiVersion: v1
metadata:
  name: mstdn-nginx
spec:
  selector:
    name: mstdn-nginx
  type: NodePort
  ports:
    - protocol: TCP
      name: nginx
      port: 80
      targetPort: 80

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mstdn-nginx
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mstdn-nginx
    spec:
      volumes:
      - name: nginx-conf
        configMap:
          name: mstdn-nginx-conf
      containers:
      - image: nginx:alpine
        imagePullPolicy: Always
        name: nginx
        command: ["/bin/ash", "-c", "envsubst '${LOCAL_DOMAIN}' < /etc/nginx/templates/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"]
        resources:
          requests:
            memory: 64Mi
            cpu: 50m
        ports:
        - name: http
          containerPort: 80
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 1
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/templates
        env:
        - name: LOCAL_DOMAIN
          valueFrom:
            secretKeyRef:
              name: mastodon-secrets
              key: LOCAL_DOMAIN
